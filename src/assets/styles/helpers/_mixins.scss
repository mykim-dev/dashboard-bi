/// Mixin설명: box style 초기화
/// @author my.kim
@mixin qd-reset-box-model {
  margin: 0;
  padding: 0;
  border: 0;
}

/// Mixin설명: table style 초기화
/// @author my.kim
@mixin qd-reset-table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
  border-spacing: 0;
}

/// Mixin설명: list style 초기화
/// @author my.kim
@mixin qd-reset-list-style {
  margin: 0;
  padding: 0;
  list-style: none;
}

/// Mixin설명: font 초기화
/// @author my.kim
@mixin qd-default-font {
  font-family: $qd-font-family;
  font-size: $qd-font-size-root;
  font-style: normal;
}

/// Mixin설명: font 초기화(상속)
/// @author my.kim
@mixin qd-reset-font {
  font: inherit;
  font-size: 100%;
  font-weight: $qd-font-weight-regular;
  font-style: normal;
}

/// 함수설명: font 설정시 size, weight, color값을 받아 css property를 생성
/// @param {String|Number} $weight
///     폰트의 두께값
/// @param {String|Number} $size
///     폰트의 크기값
/// @param {String} $color
///     폰트의 색상값
/// @author my.kim
@mixin qd-font($weight, $size, $color) {
  font-weight: $weight;
  font-size: $size;
  color: $color;
}

/// Mixin설명: 부유값(float) 초기화
/// @author my.kim
@mixin qd-clearfix {
  &::after {
    content: '';
    display: block;
    height: 0;
    overflow: hidden;
    clear: both;
  }
}

/// Mixin설명: caption 등의 텍스트 숨김처리가 필요한 부분에 적용
/// @author my.kim
@mixin qd-hide {
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
}

/// Mixin설명: box-sizing 속성 조절
/// @param {String} $box-model [border-box]
///     변경할 box-sizing 속성
/// @author my.kim
@mixin qd-box-sizing($box-model: border-box) {
  -webkit-box-sizing: $box-model;
  -moz-box-sizing: $box-model;
  box-sizing: $box-model;
}

/// Mixin설명: border-radius 속성 조절
/// @param {String} $radius [3px]
///     변경할 border-radius값
/// @author my.kim
@mixin qd-border-radius($radius: 3px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

/// Mixin설명: Theme적용 Mixin
/// @param {Object} $themes [$themes]
///     전체 테마를 가지고 있는 scss object
/// @author my.kim
@mixin qd-themify($themes: $themes) {
  @each $theme,
    $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key,
        $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

/// Mixin설명: 부모class에 따라서 style적용을 변경할 때 사용
/// @param {String} $parent
///     현재 사용할 content의 부모class값
/// @author my.kim
@mixin qd-control-by-parent($parent) {
  #{$parent} & {
    @content;
  }
}

/// Mixin설명: height와 line-height값을 지정
/// @param {String|Number} $height
///     사용할 높이값
/// @author my.kim
@mixin qd-set-oneline-height($height) {
  @if type-of($height)==number {
    $height: #{$height}px;
  }

  height: #{$height};
  line-height: #{$height};
}

/// Mixin설명: form control들의 type별로 분기해서 style 적용
/// @param {String} $parent
///     form control의 class값
/// @param {$string} $tag-type [input]
///     form control의 type(input, checkbox, select, ....etc)
/// @author my.kim
@mixin qd-set-form-style($parent, $tag-type: 'input') {
  @include qd-set-form-label-style($parent);
  @include qd-set-form-input-style($parent, $tag-type);
}

/// Mixin설명: form control들의 label style 공통처리
/// @param {String} $parent
///     form control의 class값
/// @author my.kim
@mixin qd-set-form-label-style($parent) {
  #{$parent} {
    &__label {
      display: block;
      font-size: $qd-form-item-font-size;
      font-weight: $qd-font-weight-regular;
      margin-bottom: $qd-form-item-label-margin-bottom;
      color: $qd-input-color;
      @include qd-text-overflow-ellipsis();

      &.is-required {
        padding-left: 10px;
        position: relative;

        &::before {
          content: "\002A";
          font-size: inherit;
          font-weight: inherit;
          color: $qd-color-danger;
          position: absolute;
          top: 0;
          left: 0;
          width: 10px;
          height: 100%;
          text-align: left;
        }
      }
    }
  }
}

/// Mixin설명: form control들의 content style 공통처리
/// @param {String} $parent
///     form control의 class값
/// @param {$string} $tag-type [input]
///     form control의 type(input, checkbox, select, ....etc)
/// @author my.kim
@mixin qd-set-form-input-style($parent, $tag-type: 'input') {
  #{$parent} {
    &__#{$tag-type} {
      @if $tag-type !='checkbox'and $tag-type !='radio' {
        width: 100%;
      }
      @if $tag-type=='textarea' {
        .el-textarea__inner {
          font-size: $qd-form-item-font-size;
          border-color: $qd-input-border-color;
          background-color: $qd-input-background-color;
          color: $qd-input-color;
          border-radius: $qd-form-item-border-radius;
          resize: none;
          height: 100%;
          padding: 5 7px;
          &:focus {
            border-color: $qd-input-border-color-focus;
          }
        }
      }
      @else {
        .el-input__inner {
          padding: 0 7px;
          color: $qd-input-color;
          font-size: $qd-form-item-font-size;          
          border-color: $qd-input-border-color;
          border-radius: $qd-form-item-border-radius;
          background-color: $qd-input-background-color;
          
          @include qd-set-oneline-height(#{$qd-form-item-height});

          &:focus {
            border-color: $qd-input-border-color-focus;
          }
        }
      }

      &.el-input-number--medium {
        line-height: $qd-form-inner-button-height;
        height: $qd-form-inner-button-height;
      }

      &.el-input--prefix {
        & .el-input__inner {
          padding-left: 30px;
        }
      }

      &.is-left {
        @if $tag-type=='textarea' {
          .el-textarea__inner {
            text-align: left;
          }
        }
        @else {
          .el-input__inner {
            text-align: left;
          }
        }
      }

      &.is-center {
        @if $tag-type=='textarea' {
          .el-textarea__inner {
            text-align: center;
          }
        }
        @else {
          .el-input__inner {
            text-align: center;
          }
        }
      }

      &.is-right {
        @if $tag-type=='textarea' {
          .el-textarea__inner {
            text-align: right;
          }
        }
        @else {
          .el-input__inner {
            text-align: right;
          }
        }
      }

      &.is-disabled {
        .el-input__inner {
          border-color: $qd-input-border-color-disabled;
          background-color: $qd-input-background-color-disabled;
          color: $qd-input-color-disabled;
        }

        .el-textarea__inner {
          border-color: $qd-input-border-color-disabled;
          background-color: $qd-input-background-color-disabled;
          color: $qd-input-color-disabled;
        }
      }

      &.search-size-sm {
        .el-input {
          .el-input__suffix {
            top: 3px;
          }
        }

        .el-input.is-focus {
          .el-input__suffix {
            top: -3px;
          }
        }

        .el-input__inner {
          font-size: $qd-form-item-font-size;
          border-color: $qd-input-border-color;
          background-color: $qd-input-background-color;
          color: $qd-input-color;
          border-radius: $qd-form-item-border-radius;
          padding: 0 7px;
          @include qd-set-oneline-height(#{$qd-form-item-height-xs});

          &:focus {
            border-color: $qd-input-border-color-focus;
          }
        }
      }
    }


  }
}

/// Mixin설명: element ui의 radio style override
/// @author my.kim
@mixin qd-set-radio-style() {
  .el-radio {
    color: $qd-radio-label-color;
    font-weight: $qd-font-weight-regular;
    margin-right: 20px;

    .el-radio__input {
      .el-radio__inner {
        border-color: $qd-radio-border-color;
        background-color: $qd-radio-background-color;

        &::after {
          background-color: $qd-radio-pseudo-background-color;
        }
      }

      &.is-checked {
        .el-radio__inner {
          border-color: $qd-radio-border-color-checked;
          background-color: $qd-radio-background-color-checked;

          &::after {
            background-color: $qd-radio-pseudo-background-color-checked;
            width: $qd-radio-inner-bullet-checked-width;
            height: $qd-radio-inner-bullet-checked-height;
          }
        }

        & + .el-radio__label {
          color: $qd-radio-label-color-checked;
        }
      }
    }

    .el-radio__label{
      font-size: $qd-label-font-size;
      padding-left:2px;
    }
  }
}

/// Mixin설명: element ui의 checkbox style override
/// @author my.kim
@mixin qd-set-checkbox-style() {
  .el-checkbox {
    .el-checkbox__input {
      .el-checkbox__inner {
        border-color: $qd-checkbox-border-color;
        background-color: $qd-checkbox-background-color;
      }

      & + .el-checkbox__label {
        color: $qd-color-gray-100;
        font-size: $qd-form-item-font-size;
      }

      &.is-focus {
        .el-checkbox__inner {
          border-color: $qd-checkbox-border-color;
        }
      }

      &.is-checked,
      &.is-indeterminate {
        .el-checkbox__inner {
          border-color: $qd-checkbox-border-color-checked;
          background-color: $qd-checkbox-background-color-checked;

          &::after {
            border-color: $qd-checkbox-pseudo-border-color-checked;
            border-width: $qd-checkbox-border-width;
          }
        }

        & + .el-checkbox__label {
          color: $qd-checkbox-label-color-checked;
        }
      }
    }
  }
}

/// Mixin설명: element ui default theme setting값 설정
/// @author my.kim
@mixin qd-element-ui-default-setting() {
  $--font-path: '~element-ui/lib/theme-chalk/fonts' !global;
}

/// Mixin설명: Text overflow시 ellipsis처리 공통화
/// @author my.kim
@mixin qd-text-overflow-ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

/// Mixin설명: 드래그 방지
/// @author hl.lee
@mixin qd-disable-drag() {
  user-select: none;
  -ms-user-select: none; 
  -moz-user-select: none;
  -webkit-user-select: none;
}
